{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport * as THREE from 'three';\nimport Stats from './Stats.js';\nimport texture1 from './circle.png';\nexport default function Threejs() {\n  _s();\n\n  useEffect(() => {\n    // Global Variables\n    let sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    let pointSize = 20;\n    let speed = 0.0005; // CREATE SCENE\n\n    const scene = new THREE.Scene(); // DEFINE CUSTOM POINTS\n\n    const particleCount = 20000;\n    let particles = new Float32Array(particleCount);\n\n    for (let i = 0; i < particleCount; i++) {\n      particles[i] = Math.random() * 2000 - 1000;\n    } //CREATE BUFFER GEOMETRY\n\n\n    const geometry = new THREE.BufferGeometry();\n    geometry.setAttribute('position', new THREE.BufferAttribute(particles, 3)); // MATERIAL WITH IMPORTED TEXTURE\n\n    const texture = new THREE.TextureLoader().load(texture1);\n    let material = new THREE.PointsMaterial({\n      size: pointSize,\n      depthTest: false,\n      //for transparent png\n      transparent: true,\n      //for transparent png\n      fog: false,\n      map: texture\n    }); // MESH\n\n    const mesh = new THREE.Points(geometry, material);\n    mesh.scale.set(1, 1, 1);\n    scene.add(mesh); // LIGHTS\n\n    const pointLight = new THREE.PointLight(0xffffff, 0.1);\n    pointLight.position.x = 2;\n    pointLight.position.y = 3;\n    pointLight.position.z = 1000;\n    scene.add(pointLight); // CAMERA\n\n    const fieldOfView = 75;\n    const aspectRatio = sizes.width / sizes.height;\n    const nearPlane = 1;\n    const farPlane = 3000;\n    const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n    camera.position.x = 0;\n    camera.position.y = 0;\n    camera.position.z = farPlane / 3;\n    scene.add(camera); // ADD CAMERA CONTROLS\n\n    const OrbitControls = require('three-orbit-controls')(THREE);\n\n    const controls = new OrbitControls(camera); // FRONT-END PART\n\n    let container = document.getElementById('webgl-canvas');\n    container.style.width = '100%';\n    container.style.height = '100vh';\n    container.style.overflow = 'hidden'; // RENDERER\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(sizes.width, sizes.height);\n    container.appendChild(renderer.domElement);\n    let mouseX = 0;\n    let mouseY = 0;\n\n    function render() {\n      let time = Date.now() * speed; //ANIMATE PARTICLE X\n\n      for (let i = 0; i <= particleCount; i += 3) {} //ANIMATE PARTICLE Y\n\n\n      for (let i = 1; i <= particleCount; i += 3) {} //ANIMATE PARTICLE Z\n\n\n      for (let i = 2; i <= particleCount; i += 3) {\n        particles[i] = 1000 * Math.sin(i * 0.002 + time);\n      } //UPDATE GEOMETRY POSITION\n\n\n      geometry.setAttribute('position', new THREE.BufferAttribute(particles, 3)); //RENDER SCENE\n\n      renderer.render(scene, camera);\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      render();\n    }\n\n    animate(); // EVENT LISTENERS\n\n    window.addEventListener('resize', onWindowResize, false);\n    document.addEventListener('mousemove', onDocumentMouseMove, false);\n    document.addEventListener('touchstart', onDocumentTouchStart, false);\n    document.addEventListener('touchmove', onDocumentTouchMove, false); // MOUSEMOVE\n\n    let windowHalfX = sizes.width / 2;\n    let windowHalfY = sizes.height / 2;\n\n    function onDocumentMouseMove(e) {\n      mouseX = e.clientX - windowHalfX;\n      mouseY = e.clientY - windowHalfY;\n    } // TOUCH\n\n\n    function onDocumentTouchStart(e) {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        mouseX = e.touches[0].pageX - windowHalfX;\n        mouseY = e.touches[0].pageY - windowHalfY;\n      }\n    } // TOUCH MOVE\n\n\n    function onDocumentTouchMove(e) {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        mouseX = e.touches[0].pageX - windowHalfX;\n        mouseY = e.touches[0].pageY - windowHalfY;\n      }\n    } // WINDOW RESIZE\n\n\n    function onWindowResize() {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    } //GET PERFORMACE STATS, COMMENT TO HIDE\n\n\n    (function () {\n      var script = document.createElement('script');\n\n      script.onload = function () {\n        var stats = new Stats();\n        document.body.appendChild(stats.dom);\n        requestAnimationFrame(function loop() {\n          stats.update();\n          requestAnimationFrame(loop);\n        });\n      };\n\n      script.src = '//mrdoob.github.io/stats.js/build/stats.min.js';\n      document.head.appendChild(script);\n    })();\n  });\n  return null;\n}\n\n_s(Threejs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Threejs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Threejs\");","map":{"version":3,"sources":["/Users/bernardoagbranco/react-threejs/react-threejs-buffer-geometry1/src/components/Threejs.js"],"names":["useEffect","THREE","Stats","texture1","Threejs","sizes","width","window","innerWidth","height","innerHeight","pointSize","speed","scene","Scene","particleCount","particles","Float32Array","i","Math","random","geometry","BufferGeometry","setAttribute","BufferAttribute","texture","TextureLoader","load","material","PointsMaterial","size","depthTest","transparent","fog","map","mesh","Points","scale","set","add","pointLight","PointLight","position","x","y","z","fieldOfView","aspectRatio","nearPlane","farPlane","camera","PerspectiveCamera","OrbitControls","require","controls","container","document","getElementById","style","overflow","renderer","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","mouseX","mouseY","render","time","Date","now","sin","animate","requestAnimationFrame","addEventListener","onWindowResize","onDocumentMouseMove","onDocumentTouchStart","onDocumentTouchMove","windowHalfX","windowHalfY","e","clientX","clientY","touches","length","preventDefault","pageX","pageY","aspect","updateProjectionMatrix","script","createElement","onload","stats","body","dom","loop","update","src","head"],"mappings":"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","sourcesContent":["\nimport { useEffect } from 'react'\nimport * as THREE from 'three';\nimport Stats from './Stats.js'\nimport texture1 from './circle.png'\n\nexport default function Threejs() {\n\n\tuseEffect(() => {\n\n\t\t// Global Variables\n\t\tlet sizes = {\n\t\t\twidth: window.innerWidth,\n\t\t\theight: window.innerHeight\n\t\t}\n\n\t\tlet pointSize = 20;\n\t\tlet speed = 0.0005;\n\n\t\t// CREATE SCENE\n\t\tconst scene = new THREE.Scene();\n\n\t\t// DEFINE CUSTOM POINTS\n\t\tconst particleCount = 20000;\n\t\tlet particles = new Float32Array(particleCount);\n\n\t\tfor (let i = 0; i < particleCount; i++) {\n\t\t\tparticles[i] = Math.random() * 2000 - 1000;\n\t\t}\n\n\t\t//CREATE BUFFER GEOMETRY\n\t\tconst geometry = new THREE.BufferGeometry();\n\t\tgeometry.setAttribute('position', new THREE.BufferAttribute(particles, 3));\n\n\t\t// MATERIAL WITH IMPORTED TEXTURE\n\t\tconst texture = new THREE.TextureLoader().load(texture1);\n\t\tlet material = new THREE.PointsMaterial({\n\t\t\tsize: pointSize,\n\t\t\tdepthTest: false, //for transparent png\n\t\t\ttransparent: true, //for transparent png\n\t\t\tfog: false,\n\t\t\tmap: texture\n\t\t});\n\n\t\t// MESH\n\t\tconst mesh = new THREE.Points(geometry, material);\n\t\tmesh.scale.set(1, 1, 1);\n\t\tscene.add(mesh);\n\n\t\t// LIGHTS\n\t\tconst pointLight = new THREE.PointLight(0xffffff, 0.1)\n\t\tpointLight.position.x = 2\n\t\tpointLight.position.y = 3\n\t\tpointLight.position.z = 1000\n\t\tscene.add(pointLight)\n\n\t\t// CAMERA\n\t\tconst fieldOfView = 75;\n\t\tconst aspectRatio = sizes.width / sizes.height;\n\t\tconst nearPlane = 1;\n\t\tconst farPlane = 3000;\n\n\t\tconst camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n\t\tcamera.position.x = 0;\n\t\tcamera.position.y = 0;\n\t\tcamera.position.z = farPlane / 3;\n\t\tscene.add(camera)\n\n\t\t// ADD CAMERA CONTROLS\n\t\tconst OrbitControls = require('three-orbit-controls')(THREE)\n\t\tconst controls = new OrbitControls(camera)\n\n\t\t// FRONT-END PART\n\t\tlet container = document.getElementById('webgl-canvas');\n\t\tcontainer.style.width = '100%';\n\t\tcontainer.style.height = '100vh';\n\t\tcontainer.style.overflow = 'hidden';\n\n\t\t// RENDERER\n\t\tconst renderer = new THREE.WebGLRenderer();\n\t\trenderer.setPixelRatio(window.devicePixelRatio);\n\t\trenderer.setSize(sizes.width, sizes.height);\n\t\tcontainer.appendChild(renderer.domElement);\n\n\t\tlet mouseX = 0;\n\t\tlet mouseY = 0;\n\t\tfunction render() {\n\n\t\t\tlet time = Date.now() * speed;\n\t\t\t//ANIMATE PARTICLE X\n\t\t\tfor (let i = 0; i <= particleCount; i += 3) {\n\n\t\t\t}\n\n\t\t\t//ANIMATE PARTICLE Y\n\t\t\tfor (let i = 1; i <= particleCount; i += 3) {\n\n\t\t\t}\n\n\t\t\t//ANIMATE PARTICLE Z\n\t\t\tfor (let i = 2; i <= particleCount; i += 3) {\n\t\t\t\tparticles[i] = 1000 * Math.sin(i * 0.002 + time);\n\t\t\t}\n\n\t\t\t//UPDATE GEOMETRY POSITION\n\t\t\tgeometry.setAttribute('position', new THREE.BufferAttribute(particles, 3));\n\n\t\t\t//RENDER SCENE\n\t\t\trenderer.render(scene, camera);\n\t\t}\n\n\t\tfunction animate() {\n\t\t\trequestAnimationFrame(animate);\n\t\t\trender();\n\t\t}\n\t\tanimate();\n\n\t\t// EVENT LISTENERS\n\t\twindow.addEventListener('resize', onWindowResize, false);\n\t\tdocument.addEventListener('mousemove', onDocumentMouseMove, false);\n\t\tdocument.addEventListener('touchstart', onDocumentTouchStart, false);\n\t\tdocument.addEventListener('touchmove', onDocumentTouchMove, false);\n\n\t\t// MOUSEMOVE\n\t\tlet windowHalfX = sizes.width / 2;\n\t\tlet windowHalfY = sizes.height / 2;\n\t\tfunction onDocumentMouseMove(e) {\n\t\t\tmouseX = e.clientX - windowHalfX;\n\t\t\tmouseY = e.clientY - windowHalfY;\n\t\t}\n\n\t\t// TOUCH\n\t\tfunction onDocumentTouchStart(e) {\n\t\t\tif (e.touches.length === 1) {\n\t\t\t\te.preventDefault();\n\t\t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n\t\t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n\t\t\t}\n\t\t}\n\n\t\t// TOUCH MOVE\n\t\tfunction onDocumentTouchMove(e) {\n\t\t\tif (e.touches.length === 1) {\n\t\t\t\te.preventDefault();\n\t\t\t\tmouseX = e.touches[0].pageX - windowHalfX;\n\t\t\t\tmouseY = e.touches[0].pageY - windowHalfY;\n\t\t\t}\n\t\t}\n\n\t\t// WINDOW RESIZE\n\t\tfunction onWindowResize() {\n\t\t\twindowHalfX = window.innerWidth / 2;\n\t\t\twindowHalfY = window.innerHeight / 2;\n\n\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\tcamera.updateProjectionMatrix();\n\t\t\trenderer.setSize(window.innerWidth, window.innerHeight);\n\t\t}\n\n\t\t//GET PERFORMACE STATS, COMMENT TO HIDE\n\t\t(function () { var script = document.createElement('script'); script.onload = function () { var stats = new Stats(); document.body.appendChild(stats.dom); requestAnimationFrame(function loop() { stats.update(); requestAnimationFrame(loop) }); }; script.src = '//mrdoob.github.io/stats.js/build/stats.min.js'; document.head.appendChild(script); })()\n\n\t});\n\n\treturn (\n\t\tnull\n\t)\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}